#!/usr/bin/env bash
#
# basic script for colorizing output
#
# author: RilCritch

scriptdir="$(dirname "$(readlink -f "$0")")"

source $scriptdir/resources/styles.sh

printhelp () {
  echo -e "${red}ERROR: incorrect usage.${reset}"
  echo "Usage:"
  echo "- To use clr you must pipe into it."
  echo -e "  * For example: 'ls | clr <optionalcolor>)'.\n"
  echo -e "- You can specify the terminal color that clr will use (default: whiteL or 15).\n"

  echo -e "  |= Color options:\n"

  echo -e "    |- Base Colors -|"
  echo -e "    |   0 - black (or bk)"
  echo -e "    |   1 - red (or rd)"
  echo -e "    |   2 - green (or gn)"
  echo -e "    |   3 - yellow (or yw)"
  echo -e "    |   4 - blue (or be)"
  echo -e "    |   5 - magenta (or ma)"
  echo -e "    |   6 - cyan (or cn)"
  echo -e "    |   7 - white (or we)\n"

  echo -e "    |- Light Colors -|"
  echo -e "    |   8  - blackL (or bkL)"
  echo -e "    |   9  - redL (or rdL)"
  echo -e "    |   10 - greenL (or gnL)"
  echo -e "    |   11 - yellowL (or ywL)"
  echo -e "    |   12 - blueL (or beL)"
  echo -e "    |   13 - magentaL (or maL)"
  echo -e "    |   14 - cyanL (or cnL)"
  echo -e "    |   15 - whiteL (or weL)\n"
}

if [ -t 0 ]; then
  printhelp
  exit 1
fi

coloroption=$1
color=""

case $coloroption in

  "black" | "bk")
    color=$black
    ;;

  "red" | "rd")
    color=$red
    ;;

  "green" | "gn")
    color=$green
    ;;

  "yellow" | "yw")
    color=$yellow
    ;;
    
  "blue" | "be")
    color=$blue
    ;;

  "magenta" | "ma")
    color=$magenta
    ;;

  "cyan" | "cn")
    color=$cyan
    ;;

  "white" | "we")
    color=$white
    ;;

  "blackL" | "bkL")
    color=$l_black
    ;;

  "redL" | "rdL")
    color=$l_red
    ;;

  "greenL" | "gnL")
    color=$l_green
    ;;

  "yellowL" | "ywL")
    color=$l_yellow
    ;;

  "blueL" | "beL")
    color=$l_blue
    ;;

  "magentaL" | "maL")
    color=$l_magenta
    ;;

  "cyanL" | "cnL")
    color=$l_cyan
    ;;

  "whiteL" | "weL" | "" | " " | "  ")
    color=$l_white
    ;;

  *)
    printhelp
    exit 2
    ;;
esac

while IFS= read -r line; do
  echo -e "${color}$line"
done
echo -e -n "${reset}"
